<apex:page controller="Review_Items_Controller" showHeader="false" sidebar="false" standardStylesheets="true">
    <apex:includeScript value="https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js" />
    <apex:includeScript value="{!URLFOR($Resource.DHTMLX, '/codebase/dhtmlx.js')}" />
    <apex:stylesheet value="{!URLFOR($Resource.DHTMLX, '/codebase/dhtmlx.css')}" />

    <style type="text/css" media="screen">
        html,
        body {
            margin: 0px;
            padding: 0px;
            height: 100%;
            overflow: hidden !important;
        }

        .dhxwins_vp_auto {
            overflow: hidden !important;
        }

        div#layoutObj {
            position: relative;
            margin-left: 0px;
            width: 100%;
            height: 260px;
        }

        .dhx_popup_arrow_right {
            display: none !important;
        }

        .uneven {
            <!--background-color: #f3f3f3a1;
            -->
        }

        .slds-button {
            position: relative;
            display: inline-block;
            line-height: 1.875rem;
            color: rgb(172, 28, 44);
            -webkit-appearance: none;
            white-space: normal;
            user-select: none;
            padding: 0px;
            background: border-box transparent;
            border-width: 1px;
            border-style: solid;
            border-color: transparent;
            border-image: initial;
            border-radius: 0.25rem;
            text-decoration: none;
        }

        .slds-button_brand,
        .slds-button--brand {
            padding-left: 1rem;
            padding-right: 1rem;
            text-align: center;
            vertical-align: middle;
            background-color: rgb(172, 28, 44);
            color: rgb(255, 255, 255);
            border-width: 1px;
            border-style: solid;
            border-image: initial;
            transition: border 0.15s linear 0s;
            border-color: rgb(172, 28, 44);
        }

        .slds-button_neutral {
            padding-left: 1rem;
            padding-right: 1rem;
            text-align: center;
            vertical-align: middle;
            background-color: rgb(255, 255, 255);
            border-width: 1px;
            border-style: solid;
            border-image: initial;
            transition: border 0.15s linear 0s;
            border-color: rgb(205, 202, 202);
            color: rgb(172, 28, 44);
            border-width: 1px;
            border-style: solid;
            border-image: initial;
            transition: border 0.15s linear 0s;
            border-color: rgb(205, 202, 202);
        }

        .dhtmlx-NotifyMessage>div {
            background-color: #76fbb6 !important;
        }

        a {
            text-decoration: none;
        }

        a:hover {
            text-decoration: underline;
        }

        .grid_hover {
            background-color: #f9d3f136;
        }

        div.gridbox_material.gridbox table.obj tr td {
            border-bottom: 1px solid rgb(205, 202, 202);
        }

        .disabled {
            background: rgb(201, 199, 197);
        }

        div.gridbox_material.gridbox table.obj tr td,
        .dhx_grid_adjust,
        .standartTreeRow {
            font-size: 13px;
        }

        #toolbarDiv {
            width: 100%;
            position: relative;
            background: whitesmoke;
            height: 34px;
            padding-left: 5px;
            text-align: center;
            line-height: 34px;
            font-size: 16px;
        }
    </style>

    <body>
        <div id="toolbarDiv">
            Add Notes
        </div>
        <div id="layoutObj"></div>

        <button class="slds-button slds-button_brand disabled" id="LinkButton" style=" float: right;  margin: 5px; border-color: white;"
            type="button" title="Link" onclick="LinkDocToRI();">Link</button>
        <button class="slds-button slds-button_neutral" style=" float: right;  margin: 5px;" type="button" title="Close" onclick="closeParentPopup();">Close</button>


        <script type="text/javascript">
            var url = (window.location != window.parent.location) ? document.referrer : document.location.href;
            parent.postMessage('setBaseUrl' + '-del-' + document.location.href, url);

            window.addEventListener("message", function (event) {

                var pass_data = JSON.parse(event.data);

                if (pass_data.func)
                    if (pass_data.func == 'rowSelect') {
                        selectedId = pass_data.id;
                        getNotes(selectedId);
                        if (selectedId == 'null') {
                            myEditor.setReadonly(true);
                        } else {
                            myEditor.setReadonly(false);
                        }

                    }
            }, false);

            var reviewItemId;
            var selectedId;
            var vars = {};
            var parts = window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (m, key, value) {
                vars[key] = value;
            });
            reviewItemId = vars["id"];
            console.log(reviewItemId);
            console.log(vars["recordId"]);

            var myLayout = new dhtmlXLayoutObject({
                parent: "layoutObj",
                pattern: '1C'
            });
            myLayout.cells("a").hideHeader();
            //myLayout.cells("a").setText("Add Notes");
            //myLayout.cells("a").fixSize(true, false);

            myEditor = myLayout.cells("a").attachEditor();
            myEditor.setReadonly(true);
            myEditor.attachEvent("onAccess", function (eventName, evObj) {
                if (eventName == "keyup") {
                    if (myEditor.getContent() == '' || myEditor.getContent() == null) {
                        $("#LinkButton").addClass("disabled");
                    } else {
                        $("#LinkButton").removeClass("disabled");
                    }
                }
            });

            function getNotes(docId) {
                myEditor.setReadonly(false);
                Review_Items_Controller.GetDocNotes(docId, reviewItemId, function (result, event) {
                    if (event.type == 'exception') {
                        alert(event.message);
                    } else {
                        myEditor.setContent(($('<div>').html(result).text()));
                        console.log(result);
                        if (result == '' || result == null) {
                            $("#LinkButton").addClass("disabled");
                            $("#LinkButton").html('Link');
                        } else {
                            $("#LinkButton").removeClass("disabled");
                            $("#LinkButton").html('Update Note');
                        }
                    }
                });
            }

            function LinkDocToRI() {

                var content = myEditor.getContent();
                console.log(content);
                console.log(selectedId);
                if (selectedId == 'null' || content == '' || content == null) {
                    /*dhtmlx.message({
                        type: "error",
                        text: "Please, select a document."
                    })*/
                } else {
                    console.log('ffff');
                    console.log(reviewItemId);
                    Review_Items_Controller.LinkDocToRI(reviewItemId, selectedId, content, function (result, event) {
                        if (event.type == 'exception') {
                            alert(event.message);
                        } else {
                            var text = '';
                            if ($("#LinkButton").html() == 'Link') {
                                text = 'Document Linked to Review Item.';
                            } else {
                                text = 'Note successfully updated.';
                            }
                            dhtmlx.message({
                                expire: 3500,
                                type: "NotifyMessage",
                                text: text
                            })
                        }
                    });
                }
            }

            function closeParentPopup() {
                var url = (window.location != window.parent.location) ? document.referrer : document.location.href;
                parent.postMessage('CloseLightningPopupFromVF', url);
            }


        </script>

    </body>

</apex:page>